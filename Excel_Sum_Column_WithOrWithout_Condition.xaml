<Activity mc:Ignorable="sap sap2010 sads" x:Class="Excel_Sum_Column_By_Condition" this:Excel_Sum_Column_By_Condition.in_Condition="[nothing]"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:this="clr-namespace:"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="datatable to sum on" Name="in_DataTable" Type="InArgument(sd:DataTable)" />
    <x:Property sap2010:Annotation.AnnotationText="index to column to sum the value of" Name="in_ColumnIndexToSum" Type="InArgument(x:Int32)" />
    <x:Property sap2010:Annotation.AnnotationText="coloumn index to verify the value to satisfy condition" Name="in_ColumnIndexToCheckCondition" Type="InArgument(x:Int32)" />
    <x:Property sap2010:Annotation.AnnotationText="condition as string (usually status ) &#xD;&#xA;nothing by default" Name="in_Condition" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="sum as double" Name="out_Sum" Type="OutArgument(x:Double)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Excel_Sum_Column_By_Condition_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="This workflow calculates the sum of given column index of datatable based on condition if not nothing&#xD;&#xA;&#xD;&#xA;input: datatable,column index to sum,condition&#xD;&#xA;&#xD;&#xA;output:sum" DisplayName="Excel_Sum_Column_By_Condition" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <If Condition="[in_Condition is Nothing]" DisplayName="if no condition" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Assign DisplayName="get sum without condition" sap2010:WorkflowViewState.IdRef="Assign_2">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Double">[out_Sum]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Double">[in_DataTable.AsEnumerable.Sum(Function (x) If(Double.TryParse(x.item(in_ColumnIndexToSum).ToString, Nothing), Double.Parse(x.Item(in_ColumnIndexToSum).ToString), 0))]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <Assign DisplayName="get sum with condition" sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Double">[out_Sum]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Double">[in_DataTable.AsEnumerable.Sum(Function (x) If(x.item(in_ColumnIndexToCheckCondition).ToString.equals(in_Condition) And double.TryParse(x.Item(in_ColumnIndexToSum).ToString,nothing),Double.Parse(x.Item(in_ColumnIndexToSum).ToString), 0))]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Else>
    </If>
    <sads:DebugSymbol.Symbol>d1RGOlxXb3JrZmxvd3NcSUJfUGF5bWVudF9HYXRld2F5c1xFeGNlbFxFeGNlbF9TdW1fQ29sdW1uX1dpdGhPcldpdGhvdXRfQ29uZGl0aW9uLnhhbWwKAYMBAY0BAQJMA2QOAgEBTQViCgIBAk0TTS4CAQNPCVYSAgEJWQlgEgIBBVQ0VNsBAgEMUTVRPgIBCl40XqICAgEIWzVbPgIBBg==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="509,208" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="531,434">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Excel_Sum_Column_By_Condition_1" sap:VirtualizedContainerService.HintSize="571,514" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>